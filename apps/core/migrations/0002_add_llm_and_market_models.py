# Generated by Django 5.2 on 2025-07-21 20:19

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="LLMProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "provider_type",
                    models.CharField(
                        choices=[
                            ("openai", "OpenAI"),
                            ("ollama", "OLLAMA"),
                            ("huggingface", "HuggingFace"),
                            ("anthropic", "Anthropic"),
                        ],
                        max_length=20,
                    ),
                ),
                ("api_url", models.URLField(blank=True)),
                ("api_key", models.CharField(blank=True, max_length=500)),
                ("model_name", models.CharField(max_length=100)),
                ("max_tokens", models.IntegerField(default=1000)),
                (
                    "temperature",
                    models.FloatField(
                        default=0.3,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(2.0),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_available", models.BooleanField(default=False)),
                ("last_check", models.DateTimeField(blank=True, null=True)),
                ("requests_count", models.IntegerField(default=0)),
                ("total_tokens_used", models.BigIntegerField(default=0)),
                ("last_request", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "core_llm_providers",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Market",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_regulated", models.BooleanField(default=True)),
                (
                    "min_market_cap",
                    models.BigIntegerField(
                        blank=True, help_text="Minimum market cap in PLN", null=True
                    ),
                ),
                ("trading_hours_start", models.TimeField(blank=True, null=True)),
                ("trading_hours_end", models.TimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "core_markets",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NewsClassification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sentiment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("very_positive", "Very Positive"),
                            ("positive", "Positive"),
                            ("neutral", "Neutral"),
                            ("negative", "Negative"),
                            ("very_negative", "Very Negative"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "sentiment_score",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-1.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "market_impact",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("very_high", "Very High Impact"),
                            ("high", "High Impact"),
                            ("medium", "Medium Impact"),
                            ("low", "Low Impact"),
                            ("minimal", "Minimal Impact"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("mentioned_companies", models.JSONField(blank=True, default=list)),
                ("mentioned_people", models.JSONField(blank=True, default=list)),
                ("mentioned_locations", models.JSONField(blank=True, default=list)),
                ("key_topics", models.JSONField(blank=True, default=list)),
                ("ai_summary", models.TextField(blank=True)),
                ("ai_reasoning", models.TextField(blank=True)),
                ("key_phrases", models.JSONField(blank=True, default=list)),
                ("processing_time_ms", models.IntegerField(blank=True, null=True)),
                ("tokens_used", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "core_news_classifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="business_description",
            field=models.TextField(
                blank=True, help_text="Brief description of company's business"
            ),
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="isin_code",
            field=models.CharField(
                blank=True,
                help_text="International Securities Identification Number",
                max_length=12,
            ),
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="keywords",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Keywords to help AI identify news related to this company",
            ),
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="last_ai_analysis",
            field=models.DateTimeField(
                blank=True,
                help_text="When this stock was last analyzed by AI for news relevance",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="market_cap",
            field=models.BigIntegerField(
                blank=True, help_text="Market capitalization in PLN", null=True
            ),
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="news_monitoring_enabled",
            field=models.BooleanField(
                default=True, help_text="Whether to monitor news for this stock"
            ),
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="website",
            field=models.URLField(blank=True, help_text="Company's official website"),
        ),
        migrations.AlterField(
            model_name="stocksymbol",
            name="sector",
            field=models.CharField(
                blank=True, help_text="Industry sector (legacy field)", max_length=100
            ),
        ),
        migrations.CreateModel(
            name="Industry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("code", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_cyclical", models.BooleanField(default=False)),
                (
                    "volatility_level",
                    models.CharField(
                        choices=[
                            ("low", "Low Volatility"),
                            ("medium", "Medium Volatility"),
                            ("high", "High Volatility"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "keywords",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Keywords for automatic classification",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent_industry",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_industries",
                        to="core.industry",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Industries",
                "db_table": "core_industries",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="industries",
            field=models.ManyToManyField(
                blank=True,
                help_text="All industries the company operates in",
                related_name="stocks",
                to="core.industry",
            ),
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="primary_industry",
            field=models.ForeignKey(
                blank=True,
                help_text="Primary industry/sector of the company",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="primary_stocks",
                to="core.industry",
            ),
        ),
        migrations.AddField(
            model_name="stocksymbol",
            name="market",
            field=models.ForeignKey(
                blank=True,
                help_text="Stock market where company is listed",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="stocks",
                to="core.market",
            ),
        ),
    ]
