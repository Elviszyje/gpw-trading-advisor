# Generated by Django 5.2 on 2025-07-21 20:40

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0003_add_llm_and_market_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="IndustrySentiment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sentiment",
                    models.CharField(
                        choices=[
                            ("very_positive", "Very Positive"),
                            ("positive", "Positive"),
                            ("neutral", "Neutral"),
                            ("negative", "Negative"),
                            ("very_negative", "Very Negative"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "sentiment_score",
                    models.FloatField(
                        help_text="Sentiment score from investor perspective (-1 to 1)",
                        validators=[
                            django.core.validators.MinValueValidator(-1.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        help_text="AI confidence in this sentiment analysis",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "reasoning",
                    models.TextField(
                        help_text="AI reasoning for this industry-specific sentiment"
                    ),
                ),
                (
                    "classification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="industry_sentiments",
                        to="core.newsclassification",
                    ),
                ),
                (
                    "industry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sentiment_analyses",
                        to="core.industry",
                    ),
                ),
            ],
            options={
                "db_table": "core_industry_sentiments",
                "ordering": ["-sentiment_score"],
                "unique_together": {("classification", "industry")},
            },
        ),
        migrations.CreateModel(
            name="StockSentiment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sentiment",
                    models.CharField(
                        choices=[
                            ("very_positive", "Very Positive"),
                            ("positive", "Positive"),
                            ("neutral", "Neutral"),
                            ("negative", "Negative"),
                            ("very_negative", "Very Negative"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "sentiment_score",
                    models.FloatField(
                        help_text="Sentiment score from investor perspective (-1 to 1)",
                        validators=[
                            django.core.validators.MinValueValidator(-1.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        help_text="AI confidence in this sentiment analysis",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "reasoning",
                    models.TextField(
                        help_text="AI reasoning for this stock-specific sentiment"
                    ),
                ),
                (
                    "relevance_score",
                    models.FloatField(
                        help_text="How relevant is this news to the stock",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "classification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_sentiments",
                        to="core.newsclassification",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sentiment_analyses",
                        to="core.stocksymbol",
                    ),
                ),
            ],
            options={
                "db_table": "core_stock_sentiments",
                "ordering": ["-relevance_score", "-sentiment_score"],
                "unique_together": {("classification", "stock")},
            },
        ),
    ]
