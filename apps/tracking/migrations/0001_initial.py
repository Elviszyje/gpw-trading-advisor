# Generated by Django 5.2 on 2025-07-21 15:21

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="PerformanceMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("total_value", models.DecimalField(decimal_places=2, max_digits=15)),
                ("cash_balance", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "invested_amount",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                (
                    "daily_return",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                (
                    "total_return",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                (
                    "volatility",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Daily volatility percentage",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "max_drawdown",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Maximum drawdown percentage",
                        max_digits=8,
                        null=True,
                    ),
                ),
                ("trades_count", models.PositiveIntegerField(default=0)),
                ("winning_trades", models.PositiveIntegerField(default=0)),
                ("losing_trades", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Performance Metrics",
                "verbose_name_plural": "Performance Metrics",
                "db_table": "tracking_performance_metrics",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Portfolio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "initial_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("10000.00"),
                        help_text="Starting balance in PLN",
                        max_digits=15,
                    ),
                ),
                (
                    "current_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("10000.00"),
                        help_text="Current available balance",
                        max_digits=15,
                    ),
                ),
                (
                    "invested_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Currently invested amount",
                        max_digits=15,
                    ),
                ),
                (
                    "total_return",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total return in PLN",
                        max_digits=15,
                    ),
                ),
                (
                    "total_return_percent",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.00"),
                        help_text="Total return percentage",
                        max_digits=8,
                    ),
                ),
                (
                    "max_position_size_percent",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("10.00"),
                        help_text="Maximum position size as percentage of portfolio",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "stop_loss_percent",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("5.00"),
                        help_text="Default stop loss percentage",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                (
                    "auto_follow_signals",
                    models.BooleanField(
                        default=False, help_text="Automatically execute signals"
                    ),
                ),
                ("total_trades", models.PositiveIntegerField(default=0)),
                ("winning_trades", models.PositiveIntegerField(default=0)),
                ("losing_trades", models.PositiveIntegerField(default=0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Portfolio",
                "verbose_name_plural": "Portfolios",
                "db_table": "tracking_portfolio",
                "ordering": ["-is_default", "name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("quantity", models.PositiveIntegerField()),
                (
                    "average_buy_price",
                    models.DecimalField(decimal_places=4, max_digits=10),
                ),
                ("current_price", models.DecimalField(decimal_places=4, max_digits=10)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("opened_at", models.DateTimeField(auto_now_add=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "stop_loss_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                (
                    "target_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                (
                    "unrealized_pnl",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                (
                    "unrealized_pnl_percent",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.00"), max_digits=8
                    ),
                ),
            ],
            options={
                "verbose_name": "Position",
                "verbose_name_plural": "Positions",
                "db_table": "tracking_position",
                "ordering": ["-opened_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "trade_type",
                    models.CharField(
                        choices=[("buy", "Buy"), ("sell", "Sell")], max_length=10
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                ("entry_price", models.DecimalField(decimal_places=4, max_digits=10)),
                (
                    "exit_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                (
                    "profit_loss",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                (
                    "profit_loss_percent",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                ("opened_at", models.DateTimeField()),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("closed", "Closed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("entry_reason", models.TextField(blank=True)),
                ("exit_reason", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Trade",
                "verbose_name_plural": "Trades",
                "db_table": "tracking_trade",
                "ordering": ["-opened_at"],
                "abstract": False,
            },
        ),
    ]
